{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/collection.js","index.min.js","src/index.js","src/model.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","_dereq_","module","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","$http","BaseModel","BaseCollection","models","opts","this","currentlyFetching","model","url","sort","comparator","parse","add","res","data","options","_this","defaults","merge","method","_","result","extend","params","req","then","reset","index","id","findWhere","_this2","isSingular","isArray","removed","forEach","indexOf","push","splice","_this3","slice","added","insertAt","at","_prepareModel","colModel","get","set","attributes","attrs","save","constructor","toJSON","map","collection","attr","invoke","first","undefined","where","methods","each","_len","arguments","args","Array","_key","unshift","apply","attributeMethods","context","iterator","isFunction","2","_interopRequireDefault","obj","__esModule","default","_collection","_collection2","_model","_model2","angular","factory","./collection.js","./model.js","3","_typeof","Symbol","$rootScope","urlRoot","idAttribute","_eventBus","$new","destuctors","$on","callbacks","event","unwatch","status","headers","keys","contains","$broadcast","cb","queue","wrapped","scope","_len2","_key2","concat","original","matches","filter","_len3","_key3","off","on","val","changed","_hasIdAttribute","aVal","aKey","trigger","base","isNew","encodeURIComponent","charAt","clone","bind","destroy","_this4","remove","$destroy","modelMethods","_len4","_key4"],"mappings":"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","file":"index.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* eslint-disable no-return-assign */\n/* global _ */\n\nexport default ['$http', 'BaseModel', function ($http, BaseModel) {\n  class BaseCollection {\n    constructor (models, opts) {\n      this.currentlyFetching = false\n      this.opts = opts\n\n      if (this.opts) {\n        if (this.opts.model) { this.model = this.opts.model }\n        if (this.opts.url) { this.url = this.opts.url }\n        if (this.opts.sort) { this.sort = this.opts.sort }\n        if (this.opts.comparator) { this.comparator = this.opts.comparator }\n        if (this.opts.parse && typeof this.opts.parse === 'function') {\n          this.parse = this.opts.parse\n          delete this.opts.parse\n        }\n      }\n\n      this.models = []\n      this.length = 0\n      this.add(models, this.opts)\n    }\n\n    url () {}\n\n    parse (res) { return res.data }\n\n    fetch (options) {\n      let defaults = {\n        merge: true,\n        parse: true,\n        method: 'GET',\n        url: _(this).result('url')\n      }\n\n      options = _.extend(defaults, options)\n      if (options.params) { options.params = _.extend({}, options.params) }\n      if (options.data) { options.data = _.extend({}, options.data) }\n\n      this.currentlyFetching = true\n      let req = $http(options).then(models => {\n        if (options.reset) { this.reset() }\n        this.add(models, options)\n        return this\n      })\n\n      req.finally(() => this.currentlyFetching = false)\n\n      return req\n    }\n\n    eq (index) {\n      if (this.models) {\n        return this.models[index]\n      }\n    }\n\n    get (id) {\n      return _(this.models).findWhere({id})\n    }\n\n    remove (models) {\n      let isSingular = !_(models).isArray()\n      if (isSingular) { models = [models] }\n      let removed = []\n\n      _(models).forEach(model => {\n        let index = this.indexOf(model)\n        if (index === -1) { return }\n        removed.push(model)\n        this.models.splice(index, 1)\n        return this.length--\n      })\n\n      if (isSingular) { return removed[0] } else { return removed }\n    }\n\n    add (models, options) {\n      options = _.extend({sort: true}, options)\n\n      if (options.parse) { models = this.parse(models) }\n      if (!models) { return }\n\n      let isSingular = !_(models).isArray()\n      models = isSingular ? [models] : models.slice()\n      let added = []\n      let insertAt = typeof options.at === 'undefined' ? this.length : options.at\n\n      models.forEach(model => {\n        model = this._prepareModel(model, options)\n\n        // Add this model unless we already have it in the collection\n        let colModel = this.get(model.id)\n        if (colModel == null) {\n          added.push(model)\n          this.length++\n          this.models.splice(insertAt, 0, model)\n          return insertAt++\n        } else if (options.merge) {\n          return colModel.set(model.attributes, options)\n        }\n      })\n\n      if (options.sort) { this.sort() }\n\n      return isSingular ? added[0] : added\n    }\n\n    create (attrs, opts) {\n      let instance = this.add(attrs, opts)\n      if (instance) { return instance.save() }\n    }\n\n    clone () {\n      return new this.constructor(this.toJSON(), this.opts)\n    }\n\n    toJSON () {\n      return _.map(this.models, model => model.toJSON()\n      )\n    }\n\n    reset () {\n      this.models = []\n      this.length = 0\n      return this\n    }\n\n    sort () {\n      if (this.comparator) { return this.models.sort(this.comparator) }\n    }\n\n    _prepareModel (attrs, options) {\n      let model\n      options = _.extend({collection: this}, options)\n      if (attrs instanceof this.model || attrs instanceof BaseCollection) {\n        model = attrs\n        model.collection = this\n      } else {\n        /* eslint-disable new-cap */\n        model = new this.model(attrs, options)\n        /* eslint-enable new-cap */\n      }\n      return model\n    }\n\n    pluck (attr) {\n      return _.invoke(this.models, 'get', attr)\n    }\n\n    where (attrs, first) {\n      if (!attrs) {\n        return first ? undefined : []\n      }\n\n      let method = 'filter'\n      if (first) {\n        method = 'find'\n      }\n      return this[method](function (model) {\n        for (let key in attrs) {\n          if (attrs[key] !== model.get(key)) { return false }\n        }\n        return true\n      })\n    }\n\n    findWhere (attrs) {\n      return this.where(attrs, true)\n    }\n  }\n\n  BaseCollection.prototype.model = BaseModel\n\n  // From the Backbone source: https://github.com/jashkenas/backbone/blob/master/backbone.js#L942\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  let methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain']\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, method =>\n    BaseCollection.prototype[method] = function (...args) {\n      args.unshift(this.models)\n      return _[method].apply(_, args)\n    }\n\n  )\n\n  // Underscore methods that take a property name as an argument.\n  let attributeMethods = ['groupBy', 'countBy', 'sortBy']\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, method =>\n    BaseCollection.prototype[method] = function (value, context) {\n      let iterator = _.isFunction(value) ? value : model => model.get(value)\n      return _[method](this.models, iterator, context)\n    }\n\n  )\n\n  return BaseCollection\n}]\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-return-assign */\n/* global _ */\n\nexports.default = ['$http', 'BaseModel', function ($http, BaseModel) {\n  var BaseCollection = function () {\n    function BaseCollection(models, opts) {\n      _classCallCheck(this, BaseCollection);\n\n      this.currentlyFetching = false;\n      this.opts = opts;\n\n      if (this.opts) {\n        if (this.opts.model) {\n          this.model = this.opts.model;\n        }\n        if (this.opts.url) {\n          this.url = this.opts.url;\n        }\n        if (this.opts.sort) {\n          this.sort = this.opts.sort;\n        }\n        if (this.opts.comparator) {\n          this.comparator = this.opts.comparator;\n        }\n        if (this.opts.parse && typeof this.opts.parse === 'function') {\n          this.parse = this.opts.parse;\n          delete this.opts.parse;\n        }\n      }\n\n      this.models = [];\n      this.length = 0;\n      this.add(models, this.opts);\n    }\n\n    _createClass(BaseCollection, [{\n      key: 'url',\n      value: function url() {}\n    }, {\n      key: 'parse',\n      value: function parse(res) {\n        return res.data;\n      }\n    }, {\n      key: 'fetch',\n      value: function fetch(options) {\n        var _this = this;\n\n        var defaults = {\n          merge: true,\n          parse: true,\n          method: 'GET',\n          url: _(this).result('url')\n        };\n\n        options = _.extend(defaults, options);\n        if (options.params) {\n          options.params = _.extend({}, options.params);\n        }\n        if (options.data) {\n          options.data = _.extend({}, options.data);\n        }\n\n        this.currentlyFetching = true;\n        var req = $http(options).then(function (models) {\n          if (options.reset) {\n            _this.reset();\n          }\n          _this.add(models, options);\n          return _this;\n        });\n\n        req.finally(function () {\n          return _this.currentlyFetching = false;\n        });\n\n        return req;\n      }\n    }, {\n      key: 'eq',\n      value: function eq(index) {\n        if (this.models) {\n          return this.models[index];\n        }\n      }\n    }, {\n      key: 'get',\n      value: function get(id) {\n        return _(this.models).findWhere({ id: id });\n      }\n    }, {\n      key: 'remove',\n      value: function remove(models) {\n        var _this2 = this;\n\n        var isSingular = !_(models).isArray();\n        if (isSingular) {\n          models = [models];\n        }\n        var removed = [];\n\n        _(models).forEach(function (model) {\n          var index = _this2.indexOf(model);\n          if (index === -1) {\n            return;\n          }\n          removed.push(model);\n          _this2.models.splice(index, 1);\n          return _this2.length--;\n        });\n\n        if (isSingular) {\n          return removed[0];\n        } else {\n          return removed;\n        }\n      }\n    }, {\n      key: 'add',\n      value: function add(models, options) {\n        var _this3 = this;\n\n        options = _.extend({ sort: true }, options);\n\n        if (options.parse) {\n          models = this.parse(models);\n        }\n        if (!models) {\n          return;\n        }\n\n        var isSingular = !_(models).isArray();\n        models = isSingular ? [models] : models.slice();\n        var added = [];\n        var insertAt = typeof options.at === 'undefined' ? this.length : options.at;\n\n        models.forEach(function (model) {\n          model = _this3._prepareModel(model, options);\n\n          // Add this model unless we already have it in the collection\n          var colModel = _this3.get(model.id);\n          if (colModel == null) {\n            added.push(model);\n            _this3.length++;\n            _this3.models.splice(insertAt, 0, model);\n            return insertAt++;\n          } else if (options.merge) {\n            return colModel.set(model.attributes, options);\n          }\n        });\n\n        if (options.sort) {\n          this.sort();\n        }\n\n        return isSingular ? added[0] : added;\n      }\n    }, {\n      key: 'create',\n      value: function create(attrs, opts) {\n        var instance = this.add(attrs, opts);\n        if (instance) {\n          return instance.save();\n        }\n      }\n    }, {\n      key: 'clone',\n      value: function clone() {\n        return new this.constructor(this.toJSON(), this.opts);\n      }\n    }, {\n      key: 'toJSON',\n      value: function toJSON() {\n        return _.map(this.models, function (model) {\n          return model.toJSON();\n        });\n      }\n    }, {\n      key: 'reset',\n      value: function reset() {\n        this.models = [];\n        this.length = 0;\n        return this;\n      }\n    }, {\n      key: 'sort',\n      value: function sort() {\n        if (this.comparator) {\n          return this.models.sort(this.comparator);\n        }\n      }\n    }, {\n      key: '_prepareModel',\n      value: function _prepareModel(attrs, options) {\n        var model = void 0;\n        options = _.extend({ collection: this }, options);\n        if (attrs instanceof this.model || attrs instanceof BaseCollection) {\n          model = attrs;\n          model.collection = this;\n        } else {\n          /* eslint-disable new-cap */\n          model = new this.model(attrs, options);\n          /* eslint-enable new-cap */\n        }\n        return model;\n      }\n    }, {\n      key: 'pluck',\n      value: function pluck(attr) {\n        return _.invoke(this.models, 'get', attr);\n      }\n    }, {\n      key: 'where',\n      value: function where(attrs, first) {\n        if (!attrs) {\n          return first ? undefined : [];\n        }\n\n        var method = 'filter';\n        if (first) {\n          method = 'find';\n        }\n        return this[method](function (model) {\n          for (var key in attrs) {\n            if (attrs[key] !== model.get(key)) {\n              return false;\n            }\n          }\n          return true;\n        });\n      }\n    }, {\n      key: 'findWhere',\n      value: function findWhere(attrs) {\n        return this.where(attrs, true);\n      }\n    }]);\n\n    return BaseCollection;\n  }();\n\n  BaseCollection.prototype.model = BaseModel;\n\n  // From the Backbone source: https://github.com/jashkenas/backbone/blob/master/backbone.js#L942\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl', 'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke', 'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest', 'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle', 'lastIndexOf', 'isEmpty', 'chain'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function (method) {\n    return BaseCollection.prototype[method] = function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      args.unshift(this.models);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function (method) {\n    return BaseCollection.prototype[method] = function (value, context) {\n      var iterator = _.isFunction(value) ? value : function (model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  return BaseCollection;\n}];\n\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\n\nvar _collection = _dereq_('./collection.js');\n\nvar _collection2 = _interopRequireDefault(_collection);\n\nvar _model = _dereq_('./model.js');\n\nvar _model2 = _interopRequireDefault(_model);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* global angular */\nangular.module('fs.collections', []).factory('BaseCollection', _collection2.default).factory('BaseModel', _model2.default);\n\n},{\"./collection.js\":1,\"./model.js\":3}],3:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable no-return-assign */\n/* global _ */\nexports.default = ['$http', '$rootScope', function ($http, $rootScope) {\n  var BaseModel = function () {\n    _createClass(BaseModel, [{\n      key: 'parse',\n      value: function parse(res) {\n        if (res.status && res.headers) {\n          return res.data;\n        } else {\n          return res;\n        }\n      }\n    }, {\n      key: '_hasIdAttribute',\n      value: function _hasIdAttribute(attrs) {\n        return _(Object.keys(attrs)).contains(this.idAttribute);\n      }\n    }]);\n\n    function BaseModel() {\n      var _this = this;\n\n      var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, BaseModel);\n\n      this.urlRoot = '';\n      this.idAttribute = 'id';\n      if (opts.parse) {\n        attrs = this.parse(attrs);\n      }\n      this._eventBus = $rootScope.$new();\n      this._eventBus.destuctors = {};\n      this._eventBus.$on('$destroy', function () {\n        return _(_this._eventBus.destuctors).each(function (callbacks, event) {\n          return callbacks.forEach(function (obj) {\n            return obj.unwatch();\n          });\n        });\n      });\n\n      if (opts.collection) {\n        this.collection = opts.collection;\n      }\n      if (opts.urlRoot) {\n        this.urlRoot = opts.urlRoot;\n      }\n      if (opts.idAttribute) {\n        this.idAttribute = opts.idAttribute;\n      }\n      if (opts.defaults) {\n        this.defaults = opts.defaults;\n      }\n\n      this.attributes = {};\n      attrs = _.extend({}, attrs);\n      attrs = _.defaults(attrs, _.result(this, 'defaults'));\n      this.set(attrs);\n    }\n\n    _createClass(BaseModel, [{\n      key: 'trigger',\n      value: function trigger() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return this._eventBus.$broadcast.apply(this._eventBus, args);\n      }\n\n      // Wrap the bound callback to strip off the `scope` arg, as we don't want to\n      // expose that publicly\n\n    }, {\n      key: 'on',\n      value: function on(event, cb) {\n        if (!this._eventBus.destuctors[event]) {\n          this._eventBus.destuctors[event] = [];\n        }\n        var queue = this._eventBus.destuctors[event];\n        var wrapped = function wrapped(scope, e) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n\n          return cb.apply(this, [e].concat(args));\n        };\n\n        return queue.push({\n          unwatch: this._eventBus.$on(event, wrapped),\n          original: cb\n        });\n      }\n    }, {\n      key: 'off',\n      value: function off(event, cb) {\n        var callbacks = this._eventBus.destuctors[event] || [];\n        var matches = [];\n\n        if (cb) {\n          matches = callbacks.filter(function (obj) {\n            return obj.original === cb;\n          });\n        } else {\n          matches = callbacks;\n        }\n\n        return matches.forEach(function (obj) {\n          return obj.unwatch();\n        });\n      }\n    }, {\n      key: 'once',\n      value: function once(event, cb) {\n        var _this2 = this;\n\n        var wrapped = function wrapped() {\n          for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          _this2.off(event, wrapped);\n          return cb.apply(_this2, args);\n        };\n\n        return this.on(event, wrapped);\n      }\n    }, {\n      key: 'has',\n      value: function has(key) {\n        return this.attributes[key] != null;\n      }\n    }, {\n      key: 'get',\n      value: function get(key) {\n        return this.attributes[key];\n      }\n    }, {\n      key: 'set',\n      value: function set(key, val) {\n        var _this3 = this;\n\n        var attrs = void 0;\n        if (!key) {\n          return this;\n        }\n\n        if ((typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'object') {\n          attrs = key;\n        } else {\n          attrs = {};\n          attrs[key] = val;\n        }\n\n        var changed = {};\n\n        if (this._hasIdAttribute(attrs)) {\n          this.id = attrs[this.idAttribute];\n        }\n\n        _(attrs).each(function (aVal, aKey) {\n          if (_this3.attributes[aKey] !== aVal) {\n            changed[aKey] = aVal;\n          }\n          return _this3.attributes[aKey] = aVal;\n        });\n\n        this.trigger('change', this, changed);\n        _(changed).each(function (val, key) {\n          return _this3.trigger('change:' + key, _this3, val);\n        });\n\n        return this;\n      }\n    }, {\n      key: 'isNew',\n      value: function isNew() {\n        if (this.id != null) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      key: 'url',\n      value: function url() {\n        var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url');\n        if (this.isNew()) {\n          return base;\n        } else {\n          var id = encodeURIComponent(this.id);\n          return base + (base.charAt(base.length - 1) === '/' ? id : '/' + id);\n        }\n      }\n    }, {\n      key: 'toJSON',\n      value: function toJSON() {\n        return _.clone(this.attributes);\n      }\n    }, {\n      key: 'fetch',\n      value: function fetch() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        var opts = _.extend({}, options);\n\n        _(opts).defaults({\n          method: 'GET',\n          url: _.result(this, 'url')\n        });\n        return $http(opts).then(_(this.parse).bind(this)).then(_(this.set).bind(this));\n      }\n    }, {\n      key: 'save',\n      value: function save() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        var opts = _.extend({}, options);\n\n        _(opts).defaults({\n          method: this.isNew() ? 'POST' : 'PUT',\n          url: _.result(this, 'url'),\n          data: this.toJSON()\n        });\n        return $http(opts).then(_(this.parse).bind(this)).then(_(this.set).bind(this));\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this4 = this;\n\n        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        if (this.collection) {\n          this.collection.remove(this);\n        }\n        var destroy = function destroy() {\n          _this4.trigger('destroy', _this4, _this4.collection, opts);\n          return _this4._eventBus.$destroy();\n        };\n\n        if (this.isNew()) {\n          return destroy();\n        } else {\n          _(opts).defaults({\n            method: 'DELETE',\n            url: this.url('delete')\n          });\n          return $http(opts).then(_(this.parse).bind(this)).then(destroy);\n        }\n      }\n    }]);\n\n    return BaseModel;\n  }();\n\n  // From Backbone source: https://github.com/jashkenas/backbone/blob/master/backbone.js#L571\n  // Underscore methods that we want to implement on the Model.\n\n\n  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, function (method) {\n    return BaseModel.prototype[method] = function () {\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      args.unshift(this.attributes);\n      return _[method].apply(_, args);\n    };\n  });\n\n  return BaseModel;\n}];\n\n},{}]},{},[2])\n\n","/* global angular */\nimport BaseCollection from './collection.js'\nimport BaseModel from './model.js'\n\nangular.module('fs.collections', [])\n.factory('BaseCollection', BaseCollection)\n.factory('BaseModel', BaseModel)\n","/* eslint-disable no-return-assign */\n/* global _ */\nexport default ['$http', '$rootScope', function ($http, $rootScope) {\n  class BaseModel {\n    parse (res) {\n      if (res.status && res.headers) {\n        return res.data\n      } else {\n        return res\n      }\n    }\n\n    _hasIdAttribute (attrs) {\n      return _(Object.keys(attrs)).contains(this.idAttribute)\n    }\n\n    constructor (attrs = {}, opts = {}) {\n      this.urlRoot = ''\n      this.idAttribute = 'id'\n      if (opts.parse) { attrs = this.parse(attrs) }\n      this._eventBus = $rootScope.$new()\n      this._eventBus.destuctors = {}\n      this._eventBus.$on('$destroy', () => {\n        return _(this._eventBus.destuctors).each((callbacks, event) => callbacks.forEach(obj => obj.unwatch()))\n      })\n\n      if (opts.collection) { this.collection = opts.collection }\n      if (opts.urlRoot) { this.urlRoot = opts.urlRoot }\n      if (opts.idAttribute) { this.idAttribute = opts.idAttribute }\n      if (opts.defaults) { this.defaults = opts.defaults }\n\n      this.attributes = {}\n      attrs = _.extend({}, attrs)\n      attrs = _.defaults(attrs, _.result(this, 'defaults'))\n      this.set(attrs)\n    }\n\n    trigger (...args) { return this._eventBus.$broadcast.apply(this._eventBus, args) }\n\n    // Wrap the bound callback to strip off the `scope` arg, as we don't want to\n    // expose that publicly\n    on (event, cb) {\n      if (!this._eventBus.destuctors[event]) { this._eventBus.destuctors[event] = [] }\n      let queue = this._eventBus.destuctors[event]\n      let wrapped = function (scope, e, ...args) { return cb.apply(this, [e].concat(args)) }\n\n      return queue.push({\n        unwatch: this._eventBus.$on(event, wrapped),\n        original: cb\n      })\n    }\n\n    off (event, cb) {\n      let callbacks = this._eventBus.destuctors[event] || []\n      let matches = []\n\n      if (cb) {\n        matches = callbacks.filter(obj => obj.original === cb)\n      } else {\n        matches = callbacks\n      }\n\n      return matches.forEach(obj => obj.unwatch())\n    }\n\n    once (event, cb) {\n      let wrapped = (...args) => {\n        this.off(event, wrapped)\n        return cb.apply(this, args)\n      }\n\n      return this.on(event, wrapped)\n    }\n\n    has (key) { return (this.attributes[key] != null) }\n\n    get (key) { return this.attributes[key] }\n\n    set (key, val) {\n      let attrs\n      if (!key) { return this }\n\n      if (typeof key === 'object') {\n        attrs = key\n      } else {\n        attrs = {}\n        attrs[key] = val\n      }\n\n      let changed = {}\n\n      if (this._hasIdAttribute(attrs)) { this.id = attrs[this.idAttribute] }\n\n      _(attrs).each((aVal, aKey) => {\n        if (this.attributes[aKey] !== aVal) { changed[aKey] = aVal }\n        return this.attributes[aKey] = aVal\n      })\n\n      this.trigger('change', this, changed)\n      _(changed).each((val, key) => this.trigger(`change:${key}`, this, val))\n\n      return this\n    }\n\n    isNew () { if (this.id != null) { return false } else { return true } }\n\n    url () {\n      let base = _.result(this, 'urlRoot') || _.result(this.collection, 'url')\n      if (this.isNew()) {\n        return base\n      } else {\n        let id = encodeURIComponent(this.id)\n        return base + (base.charAt(base.length - 1) === '/' ? id : `/${id}`)\n      }\n    }\n\n    toJSON () {\n      return _.clone(this.attributes)\n    }\n\n    fetch (options = {}) {\n      let opts = _.extend({}, options)\n\n      _(opts).defaults({\n        method: 'GET',\n        url: _.result(this, 'url')\n      })\n      return $http(opts).then(_(this.parse).bind(this)).then(_(this.set).bind(this))\n    }\n\n    save (options = {}) {\n      let opts = _.extend({}, options)\n\n      _(opts).defaults({\n        method: this.isNew() ? 'POST' : 'PUT',\n        url: _.result(this, 'url'),\n        data: this.toJSON()\n      })\n      return $http(opts).then(_(this.parse).bind(this)).then(_(this.set).bind(this))\n    }\n\n    destroy (opts = {}) {\n      if (this.collection) { this.collection.remove(this) }\n      let destroy = () => {\n        this.trigger('destroy', this, this.collection, opts)\n        return this._eventBus.$destroy()\n      }\n\n      if (this.isNew()) {\n        return destroy()\n      } else {\n        _(opts).defaults({\n          method: 'DELETE',\n          url: this.url('delete')\n        })\n        return $http(opts).then(_(this.parse).bind(this)).then(destroy)\n      }\n    }\n  }\n\n  // From Backbone source: https://github.com/jashkenas/backbone/blob/master/backbone.js#L571\n  // Underscore methods that we want to implement on the Model.\n  let modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit']\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, method =>\n    BaseModel.prototype[method] = function (...args) {\n      args.unshift(this.attributes)\n      return _[method].apply(_, args)\n    }\n  )\n\n  return BaseModel\n}]\n"]}