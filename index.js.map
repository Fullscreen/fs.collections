{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/collection.js","src/index.js","src/model.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* eslint-disable no-return-assign */\n/* global _ */\n\nexport default ['$http', 'BaseModel', function ($http, BaseModel) {\n  class BaseCollection {\n    constructor (models, opts) {\n      this.currentlyFetching = false\n      this.opts = opts\n\n      if (this.opts) {\n        if (this.opts.model) { this.model = this.opts.model }\n        if (this.opts.url) { this.url = this.opts.url }\n        if (this.opts.sort) { this.sort = this.opts.sort }\n        if (this.opts.comparator) { this.comparator = this.opts.comparator }\n        if (this.opts.parse && typeof this.opts.parse === 'function') {\n          this.parse = this.opts.parse\n          delete this.opts.parse\n        }\n      }\n\n      this.models = []\n      this.length = 0\n      this.add(models, this.opts)\n    }\n\n    url () {}\n\n    parse (res) { return res.data }\n\n    fetch (options) {\n      let defaults = {\n        merge: true,\n        parse: true,\n        method: 'GET',\n        url: _(this).result('url')\n      }\n\n      options = _.extend(defaults, options)\n      if (options.params) { options.params = _.extend({}, options.params) }\n      if (options.data) { options.data = _.extend({}, options.data) }\n\n      this.currentlyFetching = true\n      let req = $http(options).then(models => {\n        if (options.reset) { this.reset() }\n        this.add(models, options)\n        return this\n      })\n\n      req.finally(() => this.currentlyFetching = false)\n\n      return req\n    }\n\n    eq (index) {\n      if (this.models) {\n        return this.models[index]\n      }\n    }\n\n    get (id) {\n      return _(this.models).findWhere({id})\n    }\n\n    remove (models) {\n      let isSingular = !_(models).isArray()\n      if (isSingular) { models = [models] }\n      let removed = []\n\n      _(models).forEach(model => {\n        let index = this.indexOf(model)\n        if (index === -1) { return }\n        removed.push(model)\n        this.models.splice(index, 1)\n        return this.length--\n      })\n\n      if (isSingular) { return removed[0] } else { return removed }\n    }\n\n    add (models, options) {\n      options = _.extend({sort: true}, options)\n\n      if (options.parse) { models = this.parse(models) }\n      if (!models) { return }\n\n      let isSingular = !_(models).isArray()\n      models = isSingular ? [models] : models.slice()\n      let added = []\n      let insertAt = typeof options.at === 'undefined' ? this.length : options.at\n\n      models.forEach(model => {\n        model = this._prepareModel(model, options)\n\n        // Add this model unless we already have it in the collection\n        let colModel = this.get(model.id)\n        if (colModel == null) {\n          added.push(model)\n          this.length++\n          this.models.splice(insertAt, 0, model)\n          return insertAt++\n        } else if (options.merge) {\n          return colModel.set(model.attributes, options)\n        }\n      })\n\n      if (options.sort) { this.sort() }\n\n      return isSingular ? added[0] : added\n    }\n\n    create (attrs, opts) {\n      let instance = this.add(attrs, opts)\n      if (instance) { return instance.save() }\n    }\n\n    clone () {\n      return new this.constructor(this.toJSON(), this.opts)\n    }\n\n    toJSON () {\n      return _.map(this.models, model => model.toJSON()\n      )\n    }\n\n    reset () {\n      this.models = []\n      this.length = 0\n      return this\n    }\n\n    sort () {\n      if (this.comparator) { return this.models.sort(this.comparator) }\n    }\n\n    _prepareModel (attrs, options) {\n      let model\n      options = _.extend({collection: this}, options)\n      if (attrs instanceof this.model || attrs instanceof BaseCollection) {\n        model = attrs\n        model.collection = this\n      } else {\n        /* eslint-disable new-cap */\n        model = new this.model(attrs, options)\n        /* eslint-enable new-cap */\n      }\n      return model\n    }\n\n    pluck (attr) {\n      return _.invoke(this.models, 'get', attr)\n    }\n\n    where (attrs, first) {\n      if (!attrs) {\n        return first ? undefined : []\n      }\n\n      let method = 'filter'\n      if (first) {\n        method = 'find'\n      }\n      return this[method](function (model) {\n        for (let key in attrs) {\n          if (attrs[key] !== model.get(key)) { return false }\n        }\n        return true\n      })\n    }\n\n    findWhere (attrs) {\n      return this.where(attrs, true)\n    }\n  }\n\n  BaseCollection.prototype.model = BaseModel\n\n  // From the Backbone source: https://github.com/jashkenas/backbone/blob/master/backbone.js#L942\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  let methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain']\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, method =>\n    BaseCollection.prototype[method] = function (...args) {\n      args.unshift(this.models)\n      return _[method].apply(_, args)\n    }\n\n  )\n\n  // Underscore methods that take a property name as an argument.\n  let attributeMethods = ['groupBy', 'countBy', 'sortBy']\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, method =>\n    BaseCollection.prototype[method] = function (value, context) {\n      let iterator = _.isFunction(value) ? value : model => model.get(value)\n      return _[method](this.models, iterator, context)\n    }\n\n  )\n\n  return BaseCollection\n}]\n","/* global angular */\nimport BaseCollection from './collection.js'\nimport BaseModel from './model.js'\n\nangular.module('fs.collections', [])\n.factory('BaseCollection', BaseCollection)\n.factory('BaseModel', BaseModel)\n","/* eslint-disable no-return-assign */\n/* global _ */\nexport default ['$http', '$rootScope', function ($http, $rootScope) {\n  class BaseModel {\n    parse (res) {\n      if (res.status && res.headers) {\n        return res.data\n      } else {\n        return res\n      }\n    }\n\n    _hasIdAttribute (attrs) {\n      return _(Object.keys(attrs)).contains(this.idAttribute)\n    }\n\n    constructor (attrs = {}, opts = {}) {\n      this.urlRoot = ''\n      this.idAttribute = 'id'\n      if (opts.parse) { attrs = this.parse(attrs) }\n      this._eventBus = $rootScope.$new()\n      this._eventBus.destuctors = {}\n      this._eventBus.$on('$destroy', () => {\n        return _(this._eventBus.destuctors).each((callbacks, event) => callbacks.forEach(obj => obj.unwatch()))\n      })\n\n      if (opts.collection) { this.collection = opts.collection }\n      if (opts.urlRoot) { this.urlRoot = opts.urlRoot }\n      if (opts.idAttribute) { this.idAttribute = opts.idAttribute }\n      if (opts.defaults) { this.defaults = opts.defaults }\n\n      this.attributes = {}\n      attrs = _.extend({}, attrs)\n      attrs = _.defaults(attrs, _.result(this, 'defaults'))\n      this.set(attrs)\n    }\n\n    trigger (...args) { return this._eventBus.$broadcast.apply(this._eventBus, args) }\n\n    // Wrap the bound callback to strip off the `scope` arg, as we don't want to\n    // expose that publicly\n    on (event, cb) {\n      if (!this._eventBus.destuctors[event]) { this._eventBus.destuctors[event] = [] }\n      let queue = this._eventBus.destuctors[event]\n      let wrapped = function (scope, e, ...args) { return cb.apply(this, [e].concat(args)) }\n\n      return queue.push({\n        unwatch: this._eventBus.$on(event, wrapped),\n        original: cb\n      })\n    }\n\n    off (event, cb) {\n      let callbacks = this._eventBus.destuctors[event] || []\n      let matches = []\n\n      if (cb) {\n        matches = callbacks.filter(obj => obj.original === cb)\n      } else {\n        matches = callbacks\n      }\n\n      return matches.forEach(obj => obj.unwatch())\n    }\n\n    once (event, cb) {\n      let wrapped = (...args) => {\n        this.off(event, wrapped)\n        return cb.apply(this, args)\n      }\n\n      return this.on(event, wrapped)\n    }\n\n    has (key) { return (this.attributes[key] != null) }\n\n    get (key) { return this.attributes[key] }\n\n    set (key, val) {\n      let attrs\n      if (!key) { return this }\n\n      if (typeof key === 'object') {\n        attrs = key\n      } else {\n        attrs = {}\n        attrs[key] = val\n      }\n\n      let changed = {}\n\n      if (this._hasIdAttribute(attrs)) { this.id = attrs[this.idAttribute] }\n\n      _(attrs).each((aVal, aKey) => {\n        if (this.attributes[aKey] !== aVal) { changed[aKey] = aVal }\n        return this.attributes[aKey] = aVal\n      })\n\n      this.trigger('change', this, changed)\n      _(changed).each((val, key) => this.trigger(`change:${key}`, this, val))\n\n      return this\n    }\n\n    isNew () { if (this.id != null) { return false } else { return true } }\n\n    url () {\n      let base = _.result(this, 'urlRoot') || _.result(this.collection, 'url')\n      if (this.isNew()) {\n        return base\n      } else {\n        let id = encodeURIComponent(this.id)\n        return base + (base.charAt(base.length - 1) === '/' ? id : `/${id}`)\n      }\n    }\n\n    toJSON () {\n      return _.clone(this.attributes)\n    }\n\n    fetch (options = {}) {\n      let opts = _.extend({}, options)\n\n      _(opts).defaults({\n        method: 'GET',\n        url: _.result(this, 'url')\n      })\n      return $http(opts).then(_(this.parse).bind(this)).then(_(this.set).bind(this))\n    }\n\n    save (options = {}) {\n      let opts = _.extend({}, options)\n\n      _(opts).defaults({\n        method: this.isNew() ? 'POST' : 'PUT',\n        url: _.result(this, 'url'),\n        data: this.toJSON()\n      })\n      return $http(opts).then(_(this.parse).bind(this)).then(_(this.set).bind(this))\n    }\n\n    destroy (opts = {}) {\n      if (this.collection) { this.collection.remove(this) }\n      let destroy = () => {\n        this.trigger('destroy', this, this.collection, opts)\n        return this._eventBus.$destroy()\n      }\n\n      if (this.isNew()) {\n        return destroy()\n      } else {\n        _(opts).defaults({\n          method: 'DELETE',\n          url: this.url('delete')\n        })\n        return $http(opts).then(_(this.parse).bind(this)).then(destroy)\n      }\n    }\n  }\n\n  // From Backbone source: https://github.com/jashkenas/backbone/blob/master/backbone.js#L571\n  // Underscore methods that we want to implement on the Model.\n  let modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit']\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, method =>\n    BaseModel.prototype[method] = function (...args) {\n      args.unshift(this.attributes)\n      return _[method].apply(_, args)\n    }\n  )\n\n  return BaseModel\n}]\n"]}